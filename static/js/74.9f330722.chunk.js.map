{"version":3,"sources":["components/Admin/Platforms/TableRow.js","components/Admin/Platforms/Table.js","components/Admin/Platforms/CreateForm.js","components/Admin/Platforms/Platforms.js","utils/api.js","components/shared/PaginationBackend.js","components/shared/ModalToDelete.js","components/hoc/withModal.js"],"names":["PlatformsTableRow","_ref","idx","id","name","onDelete","react_default","a","createElement","Fragment","style","paddingLeft","ModalProvider","_ref2","showModal","hideModal","Button","title","margin","padding","backgroundColor","borderColor","onClick","ModalToDelete","isOpenModal","concat","className","defaultProps","PlatformsTable","platforms","totalItems","pageSize","totalPages","currentPage","onChangePage","platformsJSX","length","map","platform","key","TableRow","Object","assign","color","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","Row","Col","PaginationBackend","items","initialPage","initialState","PlatformsCreateForm","state","handleInputChange","_ref$target","target","value","_this","setState","defineProperty","handleSubmit","event","preventDefault","_this$props","props","onCreatePlatform","onRequestClose","objectSpread","this","Form","onSubmit","FormGroup","row","Input","type","placeholder","onChange","Component","WithModalPlatformsCreateForm","withModal","Links","totalPlatforms","perPage","createPlatform","addPlatform","then","toConsumableArray","console","log","removePlatform","deletePlatform","data","message","filter","getData","getDataForPlatformPage","platformsData","Count","Page","_this2","_this$state","marginBottom","fontSize","marginRight","Platforms_Table","URL","getToken","localStorage","getItem","getOptionsForSelects","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","token","response","wrap","_context","prev","next","fetch","method","headers","Authorization","Content-Type","sent","ok","abrupt","json","Error","statusText","t0","stop","apply","arguments","getNotificationTemplates","_callee2","_context2","getAllEmails","_ref3","_callee3","_context3","sendEmail","_ref4","_callee4","content","_context4","body","JSON","stringify","_x","getEventsForCalendar","_ref5","_callee5","_context5","getDataForAdminDashboard","_ref6","_callee6","_context6","filterDataForAdminDashboard","_ref7","_callee7","_context7","_x2","getDataForRecruiterDashboard","_ref8","_callee8","_context8","getDataForLinksPage","_ref9","_callee9","_context9","addLink","_ref10","_callee10","link","_context10","_x3","deleteLink","_ref11","_callee11","_context11","_x4","filterAndSortRecruiterCandidates","page","filterAndSort","candidates","candidatesCount","companies","company","statuses","recruiter","catch","error","_ref12","_callee12","_context12","_x5","_ref13","_callee13","_context13","_x6","_ref14","_callee14","_context14","_x7","getDataForActivityPage","_ref15","_callee15","_context15","_x8","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","setPage","pager","getPager","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","keys","i","prevProps","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_9__","index","active","modal","toggle","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_10__","WrappedComponent","_Component","_getPrototypeOf2","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_len","args","_key","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","toggleModal","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","nextProps"],"mappings":"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","file":"static/js/74.9f330722.chunk.js","sourcesContent":["// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\n// Components\nimport ModalToDelete from \"../../shared/ModalToDelete\";\n// Context\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\n\nconst PlatformsTableRow = ({ idx, id, name, onDelete }) => (\n  <>\n    <td>{idx + 1}</td>\n    <td>{name}</td>\n    <td style={{ paddingLeft: \"1.5rem\" }}>\n      <ModalConsumer>\n        {({ showModal, hideModal }) => (\n          <Button\n            title=\"delete\"\n            style={{\n              margin: 0,\n              padding: \"0.2rem\",\n              backgroundColor: \"transparent\",\n              borderColor: \"transparent\"\n            }}\n            onClick={() =>\n              showModal(ModalToDelete, {\n                isOpenModal: true,\n                title: \"Delete platform\",\n                name: `${name}`,\n                onDelete: () => {\n                  onDelete(id);\n                  hideModal();\n                }\n              })\n            }\n          >\n            <i className=\"cui-trash icons font-lg\" />\n          </Button>\n        )}\n      </ModalConsumer>\n    </td>\n  </>\n);\n\nPlatformsTableRow.propTypes = {\n  idx: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string,\n  onDelete: PropTypes.func\n};\n\nPlatformsTableRow.defaultProps = {\n  name: \"\",\n  onDelete: () => null\n};\n\nexport default PlatformsTableRow;\n","// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row, Table } from \"reactstrap\";\n// Components\nimport PlatformsTableRow from \"./TableRow\";\nimport PaginationBackend from \"../../shared/PaginationBackend\";\n\nconst PlatformsTable = ({\n  platforms,\n  totalItems,\n  pageSize,\n  totalPages,\n  currentPage,\n  onChangePage,\n  onDelete\n}) => {\n  const platformsJSX =\n    platforms.length > 0 ? (\n      platforms.map((platform, idx) => (\n        <tr key={platform.id}>\n          <PlatformsTableRow idx={idx} {...platform} onDelete={onDelete} />\n        </tr>\n      ))\n    ) : (\n      <tr style={{ color: \"var(--secondary)\" }}>\n        <td colSpan={9} align=\"center\">\n          Nothing found{\" \"}\n          <span role=\"img\" aria-label=\"confused face\">\n            😕\n          </span>\n        </td>\n      </tr>\n    );\n\n  return (\n    <>\n      <Table style={{ background: \"var(--white)\" }} responsive hover>\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Platform</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>{platformsJSX}</tbody>\n      </Table>\n      {platforms.length > 0 ? (\n        <Row>\n          <Col>\n            <PaginationBackend\n              items={platforms}\n              totalItems={totalItems}\n              pageSize={pageSize}\n              totalPages={totalPages}\n              initialPage={currentPage}\n              onChangePage={onChangePage}\n            />\n          </Col>\n        </Row>\n      ) : null}\n    </>\n  );\n};\n\nPlatformsTable.propTypes = {\n  platforms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequered,\n      name: PropTypes.string\n    })\n  ),\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func,\n  onDelete: PropTypes.func\n};\n\nPlatformsTable.defaultProps = {\n  platforms: [],\n  currentPage: null,\n  pageSize: null,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null,\n  onDelete: () => null\n};\n\nexport default PlatformsTable;\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Col, FormGroup, Input, Form } from \"reactstrap\";\n\nconst initialState = {\n  name: \"\"\n};\n\nexport default class PlatformsCreateForm extends Component {\n  static propTypes = {\n    onCreatePlatform: PropTypes.func.isRequired,\n    onRequestClose: PropTypes.func.isRequired\n  };\n\n  state = {\n    ...initialState\n  };\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { onCreatePlatform, onRequestClose } = this.props;\n\n    onCreatePlatform(this.state);\n\n    this.setState({ ...initialState });\n    onRequestClose();\n  };\n\n  render() {\n    const { name } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup row>\n          <Col>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Platform name\"\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </FormGroup>\n        <Button color=\"primary\" onClick={this.handleSubmit}>\n          Create\n        </Button>\n      </Form>\n    );\n  }\n}\n","// Core\nimport React, { Component } from \"react\";\nimport { Button, Col, Row } from \"reactstrap\";\n// Components\nimport PlatformsTable from \"./Table\";\nimport PlatformsCreateForm from \"./CreateForm\";\n// HOC\nimport withModal from \"../../hoc/withModal\";\n// Context\nimport { ModalConsumer } from \"../../../providers/ModalProvider\";\n// Instruments\nimport {\n  getDataForPlatformPage,\n  addPlatform,\n  deletePlatform\n} from \"../../../utils/api\";\n\nconst WithModalPlatformsCreateForm = withModal(PlatformsCreateForm);\n\nexport default class Links extends Component {\n  state = {\n    platforms: [],\n    totalPlatforms: null,\n    totalPages: null,\n    perPage: null,\n    currentPage: 1\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n\n    this.getData(currentPage);\n  }\n\n  createPlatform = platform => {\n    addPlatform(platform).then(platform => {\n      platform\n        ? this.setState({\n            platforms: [platform, ...this.state.platforms]\n          })\n        : console.log(\"Error while adding platform\");\n    });\n  };\n\n  removePlatform = id => {\n    deletePlatform(id).then(data => {\n      data.message === \"Delete Successfully\"\n        ? this.setState(state => ({\n            platforms: state.platforms.filter(platform => platform.id !== id)\n          }))\n        : console.log(\"Error while deleting platform\");\n    });\n  };\n\n  onChangePage = currentPage => {\n    this.getData(currentPage);\n  };\n\n  getData = currentPage => {\n    getDataForPlatformPage(currentPage).then(data => {\n      const platformsData = {\n        platforms: data.platforms,\n        totalPlatforms: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage\n      };\n      this.setState({\n        ...this.state,\n        ...platformsData\n      });\n    });\n  };\n\n  render() {\n    const {\n      platforms,\n      totalPlatforms,\n      perPage,\n      totalPages,\n      currentPage\n    } = this.state;\n\n    return (\n      <>\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Platforms</h1>\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: \"1rem\" }}>\n          <Col>\n            <ModalConsumer>\n              {({ showModal }) => (\n                <Button\n                  color=\"success\"\n                  onClick={() =>\n                    showModal(WithModalPlatformsCreateForm, {\n                      isOpenModal: true,\n                      title: \"Create new platform\",\n                      onCreatePlatform: this.createPlatform\n                    })\n                  }\n                >\n                  <i\n                    style={{ marginRight: \"0.2rem\" }}\n                    className=\"fa fa-plus-circle\"\n                  />\n                  Create\n                </Button>\n              )}\n            </ModalConsumer>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <PlatformsTable\n              platforms={platforms}\n              totalItems={totalPlatforms}\n              pageSize={perPage}\n              totalPages={totalPages}\n              currentPage={currentPage}\n              onChangePage={this.onChangePage}\n              onDelete={this.removePlatform}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","const URL = \"http://api.uppeople.co/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches options for selects from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getOptionsForSelects = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/returnOptionsForSelects`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Error while fetching: ${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches letter templates from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getNotificationTemplates = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnEmailTemplate`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all emails from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getAllEmails = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/emailBox`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Sends email to a recipient\n *\n * @param {Object} content { recipient's email, subject, text}\n * @returns {Promise} Promise object represents operation result\n */\nexport const sendEmail = async content => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/mailBoxSend`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches events for calendar from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getEventsForCalendar = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/calendarView`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for admin's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForAdminDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Filters data for admin's dashboard from an api\n *\n * @param {Object} filter { dateFrom, dateTo }\n * @returns {Promise} Promise object represents operation result\n */\nexport const filterDataForAdminDashboard = async filter => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(filter)\n    });\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for recruiter's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForRecruiterDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardRecruiter`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches links from an api\n *\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForLinksPage = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLinks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds link to the list\n *\n * @param {Object} link link object\n * @returns {Object} Promise object represents operation result\n */\nexport const addLink = async link => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/addLink`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(link)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes link from the list\n *\n * @param {Number} id link's id\n * @returns {Object} Promise object represents operation result\n */\nexport const deleteLink = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/deleteLink/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n *  Filters and sorts recruiter's candidates\n *\n * @param {Number} page current page for pagination\n * @param {Object} filterAndSort filter object\n * @returns {Object} Promise object represents operation result\n */\nexport const filterAndSortRecruiterCandidates = (page, filterAndSort) => {\n  const token = getToken();\n\n  return fetch(`${URL}/main/listAllCandUsers/${page}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(filterAndSort)\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const candidatesData = {\n        candidates: data.candidates,\n        candidatesCount: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage,\n        platforms: data.platforms,\n        companies: data.company,\n        statuses: data.statuses,\n        recruiter: data.recruiter\n      };\n\n      return candidatesData;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n\n/**\n * Fetches platforms from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForPlatformPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllPlatforms/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds platform to the list\n *\n * @param {Object} platform platform object\n * @returns {Object} Promise object represents operation result\n */\nexport const addPlatform = async platform => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/add-platform`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(platform)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes platform from the list\n *\n * @param {Number} id platform's id\n * @returns {Object} - Promise object represents operation result\n */\nexport const deletePlatform = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/delete-platform/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all logs from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForActivityPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLogs/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nconst propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func\n};\n\nconst defaultProps = {\n  items: [],\n  initialPage: 1,\n  pageSize: 10,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null\n};\n\nclass PaginationBackend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset page if initialPage has changed\n    if (\n      this.props.initialPage !== prevProps.initialPage ||\n      this.props.totalItems !== prevProps.totalItems\n    ) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage = page => {\n    const { totalItems, totalPages, pageSize } = this.props;\n\n    let pager = this.state.pager;\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(totalItems, page, pageSize);\n\n    // update state\n    this.setState({ pager });\n\n    // call change page function in parent component\n    this.props.onChangePage(page);\n  };\n\n  getPager = (totalItems, currentPage, pageSize) => {\n    // default to first page\n    currentPage = currentPage || 1;\n\n    // default page size is 10\n    pageSize = pageSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage, endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      i => startPage + i\n    );\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  };\n\n  render() {\n    let pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return (\n      <Pagination className=\"pagination justify-content-end\">\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink className=\"page-link\" onClick={() => this.setPage(1)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage - 1)}\n          >\n            Previous\n          </PaginationLink>\n        </PaginationItem>\n        {pager.pages.map((page, index) => (\n          <PaginationItem\n            key={index}\n            className=\"page-item\"\n            active={pager.currentPage === page ? true : false}\n          >\n            <PaginationLink\n              className=\"page-link\"\n              onClick={() => this.setPage(page)}\n            >\n              {page}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage + 1)}\n          >\n            Next\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.totalPages)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\nPaginationBackend.propTypes = propTypes;\nPaginationBackend.defaultProps = defaultProps;\n\nexport default PaginationBackend;\n","import React, { Component } from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\n\nexport default class ModalToDelete extends Component {\n  state = {\n    modal: this.props.isOpenModal\n  };\n\n  toggle = () => {\n    this.setState(state => ({\n      modal: !state.modal\n    }));\n\n    const { onRequestClose } = this.props;\n    onRequestClose();\n  };\n\n  render() {\n    const { modal } = this.state;\n    const { title, name, className, onDelete } = this.props;\n\n    return (\n      <Modal\n        isOpen={modal}\n        toggle={this.toggle}\n        className={`modal-danger \" + ${className ? className : \"\"}`}\n      >\n        <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\n        <ModalBody>{`Are you sure to delete ${name}?`}</ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={onDelete}>\n            Delete\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\n\nconst withModal = WrappedComponent =>\n  class withModal extends Component {\n    state = {\n      modal: false\n    };\n\n    static getDerivedStateFromProps(nextProps) {\n      if (nextProps) {\n        return {\n          modal: nextProps.isOpenModal\n        };\n      }\n\n      return null;\n    }\n\n    toggleModal = () => {\n      this.setState(state => ({\n        modal: !state.modal\n      }));\n\n      const { onRequestClose } = this.props;\n      onRequestClose();\n    };\n\n    render() {\n      const { modal } = this.state;\n      const { title, className } = this.props;\n\n      // const renderModalTitle = () => {\n      //   switch (title) {\n      //     case \"new contact\":\n      //       return \"New Contact\";\n      //     case \"edit contact\":\n      //       return \"Edit Contact\";\n      //     case \"appoint interview\":\n      //       return \"Appoint Interview\";\n      //     case \"add vacancy\":\n      //       return \"Add vacancy\";\n      //     case \"new user\":\n      //       return \"New user\";\n      //     case \"create new link\":\n      //       return \"Create new link\";\n      //     default:\n      //       return \"Modal\";\n      //   }\n      // };\n\n      return (\n        <Modal\n          isOpen={modal}\n          toggle={this.toggleModal}\n          className={`modal-primary \" + ${className ? className : \"\"}`}\n        >\n          <ModalHeader toggle={this.toggleModal}>{title}</ModalHeader>\n          <ModalBody>{modal && <WrappedComponent {...this.props} />}</ModalBody>\n        </Modal>\n      );\n    }\n  };\n\nexport default withModal;\n"],"sourceRoot":""}