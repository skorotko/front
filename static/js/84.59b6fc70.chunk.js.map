{"version":3,"sources":["components/pages/NotificationTemplates.js","utils/api.js","components/shared/ControlledEditor.js","components/shared/Tabs/Tabs.js"],"names":["tabs","id","name","NotificationTemplates","state","templates","_this2","this","getNotificationTemplates","then","setState","tabPanes","length","map","tab","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","tabId","key","_shared_ControlledEditor__WEBPACK_IMPORTED_MODULE_10__","content","Number","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","_shared_Tabs_Tabs__WEBPACK_IMPORTED_MODULE_9__","Component","URL","getToken","localStorage","getItem","getOptionsForSelects","_ref","Object","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","token","response","wrap","_context","prev","next","fetch","concat","method","headers","Authorization","Content-Type","sent","ok","abrupt","json","Error","statusText","t0","console","log","stop","apply","arguments","_ref2","_callee2","_context2","getAllEmails","_ref3","_callee3","_context3","sendEmail","_ref4","_callee4","_context4","body","JSON","stringify","_x","getEventsForCalendar","_ref5","_callee5","_context5","getDataForAdminDashboard","_ref6","_callee6","_context6","filterDataForAdminDashboard","_ref7","_callee7","filter","_context7","_x2","getDataForRecruiterDashboard","_ref8","_callee8","_context8","getDataForLinksPage","_ref9","_callee9","_context9","addLink","_ref10","_callee10","link","_context10","_x3","deleteLink","_ref11","_callee11","_context11","_x4","filterAndSortRecruiterCandidates","page","filterAndSort","data","candidates","candidatesCount","Count","totalPages","Page","perPage","currentPage","platforms","companies","company","statuses","recruiter","catch","error","getDataForPlatformPage","_ref12","_callee12","_context12","_x5","addPlatform","_ref13","_callee13","platform","_context13","_x6","deletePlatform","_ref14","_callee14","_context14","_x7","getDataForActivityPage","_ref15","_callee15","_context15","_x8","ControlledEditor","props","_this","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onEditorStateChange","editorState","handleSubmit","_this$props","title","onUpdate","close","sendDetails","draftToHtml","convertToRaw","getCurrentContent","about","interviewDetail","aboutOne","descriptionOne","detailsOne","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","onSubmit","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_6__","wrapperClassName","editorClassName","toolbarClassName","localization","locale","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xl","reactstrap__WEBPACK_IMPORTED_MODULE_11__","color","onClick","Tabs","activeTab","Array","fill","active","toggle","tabPane","newArray","slice","_this$state","vacanciesCount","commentsCount","interviewsCount","reviewsCount","testsCount","offersCount","tabsJSX","tabName","renderTabName","className","xs","md","children","defaultProps"],"mappings":"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","file":"static/js/84.59b6fc70.chunk.js","sourcesContent":["// Core\nimport React, { Component } from \"react\";\nimport { Col, Row, TabPane } from \"reactstrap\";\n// Components\nimport Tabs from \"../shared/Tabs/Tabs\";\nimport ControlledEditor from \"../shared/ControlledEditor\";\n// Instruments\nimport { getNotificationTemplates } from \"../../utils/api\";\n\nconst tabs = [\n  { id: \"1\", name: \"Resume\" },\n  { id: \"2\", name: \"Interview\" },\n  { id: \"3\", name: \"Individual\" }\n];\n\nexport default class NotificationTemplates extends Component {\n  state = {\n    templates: []\n  };\n\n  componentDidMount() {\n    getNotificationTemplates().then(templates => {\n      this.setState({\n        templates\n      });\n    });\n  }\n\n  render() {\n    const { templates } = this.state;\n\n    const tabPanes =\n      templates.length > 0 &&\n      tabs.map(tab => (\n        <TabPane tabId={tab.id} key={tab.id}>\n          <ControlledEditor content={templates[Number(tab.id - 1)][\"text\"]} />\n        </TabPane>\n      ));\n\n    return (\n      <>\n        <Row>\n          <Col>\n            <Tabs tabs={tabs}>{tabPanes}</Tabs>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","const URL = \"http://api.uppeople.co/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches options for selects from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getOptionsForSelects = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/returnOptionsForSelects`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Error while fetching: ${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches letter templates from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getNotificationTemplates = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnEmailTemplate`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all emails from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getAllEmails = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/emailBox`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Sends email to a recipient\n *\n * @param {Object} content { recipient's email, subject, text}\n * @returns {Promise} Promise object represents operation result\n */\nexport const sendEmail = async content => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/mailBoxSend`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches events for calendar from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getEventsForCalendar = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/calendarView`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for admin's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForAdminDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Filters data for admin's dashboard from an api\n *\n * @param {Object} filter { dateFrom, dateTo }\n * @returns {Promise} Promise object represents operation result\n */\nexport const filterDataForAdminDashboard = async filter => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(filter)\n    });\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for recruiter's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForRecruiterDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardRecruiter`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches links from an api\n *\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForLinksPage = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLinks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds link to the list\n *\n * @param {Object} link link object\n * @returns {Object} Promise object represents operation result\n */\nexport const addLink = async link => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/addLink`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(link)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes link from the list\n *\n * @param {Number} id link's id\n * @returns {Object} Promise object represents operation result\n */\nexport const deleteLink = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/deleteLink/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n *  Filters and sorts recruiter's candidates\n *\n * @param {Number} page current page for pagination\n * @param {Object} filterAndSort filter object\n * @returns {Object} Promise object represents operation result\n */\nexport const filterAndSortRecruiterCandidates = (page, filterAndSort) => {\n  const token = getToken();\n\n  return fetch(`${URL}/main/listAllCandUsers/${page}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(filterAndSort)\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const candidatesData = {\n        candidates: data.candidates,\n        candidatesCount: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage,\n        platforms: data.platforms,\n        companies: data.company,\n        statuses: data.statuses,\n        recruiter: data.recruiter\n      };\n\n      return candidatesData;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n\n/**\n * Fetches platforms from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForPlatformPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllPlatforms/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds platform to the list\n *\n * @param {Object} platform platform object\n * @returns {Object} Promise object represents operation result\n */\nexport const addPlatform = async platform => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/add-platform`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(platform)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes platform from the list\n *\n * @param {Number} id platform's id\n * @returns {Object} - Promise object represents operation result\n */\nexport const deletePlatform = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/delete-platform/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all logs from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForActivityPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLogs/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n","// Core\nimport React, { Component } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\nimport { Col, Button, ButtonGroup, Row } from \"reactstrap\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nexport default class ControlledEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    const html = props.content === null ? \"\" : props.content;\n    const contentBlock = htmlToDraft(html);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(\n        contentBlock.contentBlocks\n      );\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  }\n\n  onEditorStateChange = editorState => {\n    this.setState({\n      editorState\n    });\n  };\n\n  handleSubmit = () => {\n    const { editorState } = this.state;\n    const { title, onUpdate, close } = this.props;\n\n    if (title === \"Send details\") {\n      const sendDetails = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        sendDetails\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"About company\") {\n      const about = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n      const contentToUpdate = {\n        about\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"Interview details\") {\n      const interviewDetail = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        interviewDetail\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"About candidate\") {\n      const aboutOne = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        aboutOne\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"Description\") {\n      const descriptionOne = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        descriptionOne\n      };\n\n      onUpdate(contentToUpdate);\n    } else if (title === \"Details\") {\n      const detailsOne = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n      const contentToUpdate = {\n        detailsOne\n      };\n\n      onUpdate(contentToUpdate);\n    } else {\n      const content = draftToHtml(\n        convertToRaw(editorState.getCurrentContent())\n      );\n\n      const contentToUpdate = {\n        content\n      };\n\n      onUpdate(contentToUpdate);\n    }\n\n    close();\n  };\n\n  render() {\n    const { editorState } = this.state;\n\n    return (\n      <div onSubmit={this.handleSubmit}>\n        <Editor\n          editorState={editorState}\n          wrapperClassName=\"wrapper-class\"\n          editorClassName=\"editor-class\"\n          toolbarClassName=\"toolbar-class\"\n          // wrapperStyle={<wrapperStyleObject>}\n          // editorStyle={<editorStyleObject>}\n          // toolbarStyle={<toolbarStyleObject>}\n          localization={{\n            locale: \"ru\"\n          }}\n          onEditorStateChange={this.onEditorStateChange}\n        />\n        <ButtonGroup>\n          <Row>\n            <Col xl={12}>\n              <Button color=\"primary\" onClick={this.handleSubmit}>\n                Save\n              </Button>\n            </Col>\n          </Row>\n        </ButtonGroup>\n      </div>\n    );\n  }\n}\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Nav, NavItem, NavLink, Row, TabContent } from \"reactstrap\";\n\nexport default class Tabs extends Component {\n  static propTypes = {\n    tabs: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    vacanciesCount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    candidatesCount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    commentsCount: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  static defaultProps = {\n    vacanciesCount: null,\n    candidatesCount: null,\n    commentsCount: null,\n    children: []\n  };\n\n  state = {\n    tabs: this.props.tabs,\n    activeTab: new Array(1).fill(\"1\"),\n    active: true\n  };\n\n  toggle = (tabPane, tab) => {\n    const { activeTab } = this.state;\n    const newArray = activeTab.slice();\n    newArray[tabPane] = tab;\n\n    this.setState({ activeTab: newArray });\n  };\n\n  render() {\n    const { activeTab, tabs } = this.state;\n    const {\n      vacanciesCount,\n      candidatesCount,\n      commentsCount,\n      interviewsCount,\n      reviewsCount,\n      testsCount,\n      offersCount\n    } = this.props;\n    const renderTabName = tabName => {\n      switch (tabName) {\n        case \"Vacancies\":\n          return `${tabName} ${vacanciesCount ? vacanciesCount : \"\"}`;\n        case \"Candidates\":\n          return `${tabName} ${candidatesCount ? candidatesCount : \"\"}`;\n        case \"Comments\":\n          return `${tabName} ${commentsCount ? commentsCount : \"\"}`;\n        case \"Interviews\":\n          return `${tabName} ${interviewsCount ? interviewsCount : \"\"}`;\n        case \"Reviews\":\n          return `${tabName} ${reviewsCount ? reviewsCount : \"\"}`;\n        case \"Tests\":\n          return `${tabName} ${testsCount ? testsCount : \"\"}`;\n        case \"Offers\":\n          return `${tabName} ${offersCount ? offersCount : \"\"}`;\n        default:\n          return tabName;\n      }\n    };\n\n    const tabsJSX = tabs.map(tab => (\n      <NavItem key={tab.id}>\n        <NavLink\n          active={activeTab[0] === tab.id}\n          name={tab.name}\n          onClick={() => this.toggle(0, tab.id)}\n        >\n          {renderTabName(tab.name)}\n        </NavLink>\n      </NavItem>\n    ));\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" md=\"12\" className=\"mb-4\">\n            <Nav tabs>{tabsJSX}</Nav>\n            <TabContent activeTab={activeTab[0]}>\n              {this.props.children}\n            </TabContent>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}