{"version":3,"sources":["components/pages/CalendarPage/CalendarPage.js","utils/api.js","components/shared/Calendar.js"],"names":["CalendarPage","state","events","_this2","this","getEventsForCalendar","then","setState","console","log","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_shared_Calendar__WEBPACK_IMPORTED_MODULE_6__","Component","URL","getToken","localStorage","getItem","getOptionsForSelects","_ref","Object","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","token","response","wrap","_context","prev","next","fetch","concat","method","headers","Authorization","Content-Type","sent","ok","abrupt","json","Error","statusText","t0","stop","apply","arguments","getNotificationTemplates","_ref2","_callee2","_context2","getAllEmails","_ref3","_callee3","_context3","sendEmail","_ref4","_callee4","content","_context4","body","JSON","stringify","_x","_ref5","_callee5","_context5","getDataForAdminDashboard","_ref6","_callee6","_context6","filterDataForAdminDashboard","_ref7","_callee7","filter","_context7","_x2","getDataForRecruiterDashboard","_ref8","_callee8","_context8","getDataForLinksPage","_ref9","_callee9","_context9","addLink","_ref10","_callee10","link","_context10","_x3","deleteLink","_ref11","_callee11","id","_context11","_x4","filterAndSortRecruiterCandidates","page","filterAndSort","data","candidates","candidatesCount","Count","totalPages","Page","perPage","currentPage","platforms","companies","company","statuses","recruiter","catch","error","getDataForPlatformPage","_ref12","_callee12","_context12","_x5","addPlatform","_ref13","_callee13","platform","_context13","_x6","deletePlatform","_ref14","_callee14","_context14","_x7","getDataForActivityPage","_ref15","_callee15","_context15","_x8","localizer","BigCalendar","momentLocalizer","moment","currDate","Date","currYear","getFullYear","currMonth","getMonth","Calendar","handleSelect","start","end","title","window","prompt","_this","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","style","height","react_big_calendar__WEBPACK_IMPORTED_MODULE_10__","selectable","popup","views","step","defaultDate","defaultView","toolbar","onSelectEvent","event","alert","format","onSelectSlot","startAccessor","endAccessor","nextProps","undefined","length","map","toDate","addHour","add"],"mappings":"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","file":"static/js/17.40f8fc5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Calendar from \"../../shared/Calendar\";\nimport { getEventsForCalendar } from \"../../../utils/api\";\n\nexport default class CalendarPage extends Component {\n  state = {\n    events: []\n  };\n\n  componentDidMount() {\n    getEventsForCalendar().then(events =>\n      this.setState({\n        events\n      })\n    );\n  }\n\n  render() {\n    const { events } = this.state;\n    console.log(events);\n    return <Calendar events={events} />;\n  }\n}\n","const URL = \"http://api.uppeople.co/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches options for selects from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getOptionsForSelects = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/returnOptionsForSelects`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Error while fetching: ${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches letter templates from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getNotificationTemplates = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnEmailTemplate`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all emails from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getAllEmails = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/emailBox`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Sends email to a recipient\n *\n * @param {Object} content { recipient's email, subject, text}\n * @returns {Promise} Promise object represents operation result\n */\nexport const sendEmail = async content => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/mailBoxSend`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches events for calendar from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getEventsForCalendar = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/calendarView`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for admin's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForAdminDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Filters data for admin's dashboard from an api\n *\n * @param {Object} filter { dateFrom, dateTo }\n * @returns {Promise} Promise object represents operation result\n */\nexport const filterDataForAdminDashboard = async filter => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(filter)\n    });\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for recruiter's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForRecruiterDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardRecruiter`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches links from an api\n *\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForLinksPage = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLinks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds link to the list\n *\n * @param {Object} link link object\n * @returns {Object} Promise object represents operation result\n */\nexport const addLink = async link => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/addLink`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(link)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes link from the list\n *\n * @param {Number} id link's id\n * @returns {Object} Promise object represents operation result\n */\nexport const deleteLink = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/deleteLink/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n *  Filters and sorts recruiter's candidates\n *\n * @param {Number} page current page for pagination\n * @param {Object} filterAndSort filter object\n * @returns {Object} Promise object represents operation result\n */\nexport const filterAndSortRecruiterCandidates = (page, filterAndSort) => {\n  const token = getToken();\n\n  return fetch(`${URL}/main/listAllCandUsers/${page}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(filterAndSort)\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const candidatesData = {\n        candidates: data.candidates,\n        candidatesCount: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage,\n        platforms: data.platforms,\n        companies: data.company,\n        statuses: data.statuses,\n        recruiter: data.recruiter\n      };\n\n      return candidatesData;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n\n/**\n * Fetches platforms from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForPlatformPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllPlatforms/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds platform to the list\n *\n * @param {Object} platform platform object\n * @returns {Object} Promise object represents operation result\n */\nexport const addPlatform = async platform => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/add-platform`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(platform)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes platform from the list\n *\n * @param {Number} id platform's id\n * @returns {Object} - Promise object represents operation result\n */\nexport const deletePlatform = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/delete-platform/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all logs from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForActivityPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLogs/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n","import React, { Component } from \"react\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\n// import { getEventsForCalendar } from \"../../utils/api\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nconst currDate = new Date();\nconst currYear = currDate.getFullYear();\nconst currMonth = currDate.getMonth();\n\nexport default class Calendar extends Component {\n  state = {\n    events: []\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    console.log(nextProps);\n    if (nextProps.events !== undefined && nextProps.events.length > 0) {\n      const modifiedEvents = nextProps.events.map(event => {\n        const title = event.title;\n        const start = moment(event.start).toDate();\n        const addHour = moment(event.start).add(1, \"hour\");\n        const end = moment(addHour).toDate();\n\n        return {\n          title,\n          start,\n          end\n        };\n      });\n\n      return {\n        events: modifiedEvents\n      };\n    }\n\n    return {\n      events: []\n    };\n  }\n\n  handleSelect = ({ start, end }) => {\n    const title = window.prompt(\"New Event name\");\n    if (title)\n      this.setState({\n        events: [\n          ...this.state.events,\n          {\n            start,\n            end,\n            title\n          }\n        ]\n      });\n  };\n\n  render() {\n    const { events } = this.state;\n\n    return (\n      <div className=\"animated\">\n        <Card>\n          <CardHeader>\n            <i className=\"icon-calendar\" />\n            Calendar\n          </CardHeader>\n          <CardBody style={{ height: \"40em\" }}>\n            <BigCalendar\n              selectable\n              popup\n              localizer={localizer}\n              // className=\"d-sm-down-none\"\n              events={events}\n              views={[\"month\", \"week\", \"day\"]}\n              step={30}\n              defaultDate={new Date(currYear, currMonth, 1)}\n              defaultView=\"month\"\n              toolbar={true}\n              onSelectEvent={event =>\n                alert(\n                  `Candidate: ${event.title}, Date: ${moment(\n                    event.start\n                  ).format(\"LLLL\")}`\n                )\n              }\n              onSelectSlot={this.handleSelect}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n              // {...this.props}\n            />\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}