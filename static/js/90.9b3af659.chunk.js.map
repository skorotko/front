{"version":3,"sources":["components/Admin/Activity/TableRow.js","components/Admin/Activity/Table.js","components/Admin/Activity/Activity.js","utils/api.js","components/shared/PaginationBackend.js"],"names":["ActivityTableRow","_ref","idx","date","text","vacId","vac","compId","compName","react_default","a","createElement","Fragment","moment","format","Link","to","concat","defaultProps","ActivityTable","logs","totalItems","pageSize","totalPages","currentPage","onChangePage","logsJSX","length","map","log","key","logId","TableRow","Object","assign","style","color","colSpan","align","role","aria-label","Table","background","responsive","hover","scope","Row","Col","PaginationBackend","items","initialPage","Activity","state","totalLogs","perPage","_this","getData","getDataForActivityPage","then","data","logsData","Count","Page","setState","objectSpread","console","this","_this$state","display","justifyContent","maxWidth","marginBottom","fontSize","alignSelf","Activity_Table","Component","URL","getToken","localStorage","getItem","getOptionsForSelects","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","token","response","wrap","_context","prev","next","fetch","method","headers","Authorization","Content-Type","sent","ok","abrupt","json","Error","statusText","t0","stop","apply","arguments","getNotificationTemplates","_ref2","_callee2","_context2","getAllEmails","_ref3","_callee3","_context3","sendEmail","_ref4","_callee4","content","_context4","body","JSON","stringify","_x","getEventsForCalendar","_ref5","_callee5","_context5","getDataForAdminDashboard","_ref6","_callee6","_context6","filterDataForAdminDashboard","_ref7","_callee7","filter","_context7","_x2","getDataForRecruiterDashboard","_ref8","_callee8","_context8","getDataForLinksPage","_ref9","_callee9","_context9","addLink","_ref10","_callee10","link","_context10","_x3","deleteLink","_ref11","_callee11","id","_context11","_x4","filterAndSortRecruiterCandidates","page","filterAndSort","candidates","candidatesCount","platforms","companies","company","statuses","recruiter","catch","error","getDataForPlatformPage","_ref12","_callee12","_context12","_x5","addPlatform","_ref13","_callee13","platform","_context13","_x6","deletePlatform","_ref14","_callee14","_context14","_x7","_ref15","_callee15","_context15","_x8","props","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","setPage","_this$props","pager","getPager","startPage","endPage","Math","ceil","startIndex","endIndex","min","pages","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Array","keys","i","prevProps","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","className","reactstrap__WEBPACK_IMPORTED_MODULE_8__","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_9__","onClick","index","active"],"mappings":"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","file":"static/js/90.9b3af659.chunk.js","sourcesContent":["// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst ActivityTableRow = ({\n  idx,\n  date,\n  text,\n  vacId,\n  vac,\n  compId,\n  compName\n}) => (\n  <>\n    <td>{idx + 1}</td>\n    <td>{moment(date).format(\"Do MMMM YYYY, h:mm:ss a\")}</td>\n    <td>{text}</td>\n    <td>\n      <Link to={`vacancies/${vacId}`}>{vac}</Link>\n    </td>\n    <td>\n      <Link to={`companies/${compId}`}>{compName}</Link>\n    </td>\n  </>\n);\n\nActivityTableRow.propTypes = {\n  idx: PropTypes.number.isRequired,\n  date: PropTypes.string,\n  text: PropTypes.string,\n  vac: PropTypes.string,\n  compName: PropTypes.string\n};\n\nActivityTableRow.defaultProps = {\n  date: \"\",\n  text: \"\",\n  vac: \"\",\n  compName: \"\"\n};\n\nexport default ActivityTableRow;\n","// Core\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row, Table } from \"reactstrap\";\n// Components\nimport ActivityTableRow from \"./TableRow\";\nimport PaginationBackend from \"../../shared/PaginationBackend\";\n\nconst ActivityTable = ({\n  logs,\n  totalItems,\n  pageSize,\n  totalPages,\n  currentPage,\n  onChangePage\n}) => {\n  const logsJSX =\n    logs.length > 0 ? (\n      logs.map((log, idx) => (\n        <tr key={log.logId}>\n          <ActivityTableRow idx={idx} {...log} />\n        </tr>\n      ))\n    ) : (\n      <tr style={{ color: \"var(--secondary)\" }}>\n        <td colSpan={9} align=\"center\">\n          Nothing found{\" \"}\n          <span role=\"img\" aria-label=\"confused face\">\n            😕\n          </span>\n        </td>\n      </tr>\n    );\n\n  return (\n    <>\n      <Table style={{ background: \"var(--white)\" }} responsive hover>\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Action</th>\n            <th scope=\"col\">Vacancy</th>\n            <th scope=\"col\">Company</th>\n          </tr>\n        </thead>\n        <tbody>{logsJSX}</tbody>\n      </Table>\n      {logs.length > 0 ? (\n        <Row>\n          <Col>\n            <PaginationBackend\n              items={logs}\n              totalItems={totalItems}\n              pageSize={pageSize}\n              totalPages={totalPages}\n              initialPage={currentPage}\n              onChangePage={onChangePage}\n            />\n          </Col>\n        </Row>\n      ) : null}\n    </>\n  );\n};\n\nActivityTable.propTypes = {\n  logs: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequered,\n      title: PropTypes.string,\n      link: PropTypes.string\n    })\n  ),\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func\n};\n\nActivityTable.defaultProps = {\n  logs: [],\n  currentPage: null,\n  pageSize: null,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null\n};\n\nexport default ActivityTable;\n","// Core\nimport React, { Component } from \"react\";\nimport { Col, Row } from \"reactstrap\";\n// Components\nimport ActivityTable from \"./Table\";\n// Instruments\nimport { getDataForActivityPage } from \"../../../utils/api\";\n\nexport default class Activity extends Component {\n  state = {\n    logs: [],\n    totalLogs: null,\n    totalPages: null,\n    perPage: null,\n    currentPage: 1\n  };\n\n  componentDidMount() {\n    const { currentPage } = this.state;\n\n    this.getData(currentPage);\n  }\n\n  onChangePage = currentPage => {\n    this.getData(currentPage);\n  };\n\n  getData = currentPage => {\n    getDataForActivityPage(currentPage).then(data => {\n      const logsData = {\n        logs: data.logs,\n        totalLogs: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage\n      };\n      this.setState(\n        {\n          ...this.state,\n          ...logsData\n        },\n        () => console.log(this.state)\n      );\n    });\n  };\n\n  render() {\n    const { logs, totalLogs, perPage, totalPages, currentPage } = this.state;\n\n    return (\n      <>\n        <Row>\n          <Col\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              maxWidth: 150,\n              marginBottom: \"0.5rem\"\n            }}\n          >\n            <h1 style={{ marginBottom: 0, fontSize: 24 }}>Activity</h1>\n            <span\n              style={{\n                alignSelf: \"flex-end\",\n                color: \"var(--gray)\"\n              }}\n            >\n              {totalLogs}\n            </span>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ActivityTable\n              logs={logs}\n              totalItems={totalLogs}\n              pageSize={perPage}\n              totalPages={totalPages}\n              currentPage={currentPage}\n              onChangePage={this.onChangePage}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","const URL = \"http://api.uppeople.co/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches options for selects from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getOptionsForSelects = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/returnOptionsForSelects`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Error while fetching: ${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches letter templates from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getNotificationTemplates = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnEmailTemplate`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all emails from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getAllEmails = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/emailBox`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Sends email to a recipient\n *\n * @param {Object} content { recipient's email, subject, text}\n * @returns {Promise} Promise object represents operation result\n */\nexport const sendEmail = async content => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/mailBoxSend`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches events for calendar from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getEventsForCalendar = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/calendarView`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for admin's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForAdminDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Filters data for admin's dashboard from an api\n *\n * @param {Object} filter { dateFrom, dateTo }\n * @returns {Promise} Promise object represents operation result\n */\nexport const filterDataForAdminDashboard = async filter => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(filter)\n    });\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for recruiter's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForRecruiterDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardRecruiter`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches links from an api\n *\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForLinksPage = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLinks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds link to the list\n *\n * @param {Object} link link object\n * @returns {Object} Promise object represents operation result\n */\nexport const addLink = async link => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/addLink`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(link)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes link from the list\n *\n * @param {Number} id link's id\n * @returns {Object} Promise object represents operation result\n */\nexport const deleteLink = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/deleteLink/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n *  Filters and sorts recruiter's candidates\n *\n * @param {Number} page current page for pagination\n * @param {Object} filterAndSort filter object\n * @returns {Object} Promise object represents operation result\n */\nexport const filterAndSortRecruiterCandidates = (page, filterAndSort) => {\n  const token = getToken();\n\n  return fetch(`${URL}/main/listAllCandUsers/${page}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(filterAndSort)\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const candidatesData = {\n        candidates: data.candidates,\n        candidatesCount: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage,\n        platforms: data.platforms,\n        companies: data.company,\n        statuses: data.statuses,\n        recruiter: data.recruiter\n      };\n\n      return candidatesData;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n\n/**\n * Fetches platforms from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForPlatformPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllPlatforms/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds platform to the list\n *\n * @param {Object} platform platform object\n * @returns {Object} Promise object represents operation result\n */\nexport const addPlatform = async platform => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/add-platform`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(platform)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes platform from the list\n *\n * @param {Number} id platform's id\n * @returns {Object} - Promise object represents operation result\n */\nexport const deletePlatform = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/delete-platform/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all logs from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForActivityPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLogs/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n","// Core\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nconst propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  totalItems: PropTypes.number,\n  totalPages: PropTypes.number,\n  onChangePage: PropTypes.func\n};\n\nconst defaultProps = {\n  items: [],\n  initialPage: 1,\n  pageSize: 10,\n  totalItems: null,\n  totalPages: null,\n  onChangePage: () => null\n};\n\nclass PaginationBackend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pager: {} };\n  }\n\n  componentDidMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // reset page if initialPage has changed\n    if (\n      this.props.initialPage !== prevProps.initialPage ||\n      this.props.totalItems !== prevProps.totalItems\n    ) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage = page => {\n    const { totalItems, totalPages, pageSize } = this.props;\n\n    let pager = this.state.pager;\n\n    if (page < 1 || page > totalPages) {\n      return;\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(totalItems, page, pageSize);\n\n    // update state\n    this.setState({ pager });\n\n    // call change page function in parent component\n    this.props.onChangePage(page);\n  };\n\n  getPager = (totalItems, currentPage, pageSize) => {\n    // default to first page\n    currentPage = currentPage || 1;\n\n    // default page size is 10\n    pageSize = pageSize || 10;\n\n    // calculate total pages\n    const totalPages = Math.ceil(totalItems / pageSize);\n\n    let startPage, endPage;\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    }\n\n    // calculate start and end item indexes\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n    // create an array of pages to ng-repeat in the pager control\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(\n      i => startPage + i\n    );\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  };\n\n  render() {\n    let pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return (\n      <Pagination className=\"pagination justify-content-end\">\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink className=\"page-link\" onClick={() => this.setPage(1)}>\n            First\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === 1 ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage - 1)}\n          >\n            Previous\n          </PaginationLink>\n        </PaginationItem>\n        {pager.pages.map((page, index) => (\n          <PaginationItem\n            key={index}\n            className=\"page-item\"\n            active={pager.currentPage === page ? true : false}\n          >\n            <PaginationLink\n              className=\"page-link\"\n              onClick={() => this.setPage(page)}\n            >\n              {page}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.currentPage + 1)}\n          >\n            Next\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem\n          className=\"page-item\"\n          disabled={pager.currentPage === pager.totalPages ? true : false}\n        >\n          <PaginationLink\n            className=\"page-link\"\n            onClick={() => this.setPage(pager.totalPages)}\n          >\n            Last\n          </PaginationLink>\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\nPaginationBackend.propTypes = propTypes;\nPaginationBackend.defaultProps = defaultProps;\n\nexport default PaginationBackend;\n"],"sourceRoot":""}