{"version":3,"sources":["components/Email/Compose/Compose.js","utils/api.js"],"names":["Compose","props","_this","Object","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleInputChange","_ref","_ref$target","target","name","value","setState","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","handleSubmit","_this$state","state","content","email","subject","body","sendEmail","toggle","bind","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","dropdownOpen","_this2","_this$state2","console","log","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","href","reactstrap__WEBPACK_IMPORTED_MODULE_11__","onSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_12__","row","reactstrap__WEBPACK_IMPORTED_MODULE_13__","for","xs","sm","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","type","id","placeholder","autoComplete","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_16__","rows","reactstrap__WEBPACK_IMPORTED_MODULE_17__","color","onClick","history","push","Component","URL","getToken","localStorage","getItem","getOptionsForSelects","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_stanislav_Workspace_GoFriends_uppeople_front_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","token","response","wrap","_context","prev","next","fetch","concat","method","headers","Authorization","Content-Type","sent","ok","abrupt","json","Error","statusText","t0","stop","apply","arguments","getNotificationTemplates","_ref2","_callee2","_context2","getAllEmails","_ref3","_callee3","_context3","_ref4","_callee4","_context4","JSON","stringify","_x","getEventsForCalendar","_ref5","_callee5","_context5","getDataForAdminDashboard","_ref6","_callee6","_context6","filterDataForAdminDashboard","_ref7","_callee7","filter","_context7","_x2","getDataForRecruiterDashboard","_ref8","_callee8","_context8","getDataForLinksPage","_ref9","_callee9","_context9","addLink","_ref10","_callee10","link","_context10","_x3","deleteLink","_ref11","_callee11","_context11","_x4","filterAndSortRecruiterCandidates","page","filterAndSort","then","data","candidates","candidatesCount","Count","totalPages","Page","perPage","currentPage","platforms","companies","company","statuses","recruiter","catch","error","getDataForPlatformPage","_ref12","_callee12","_context12","_x5","addPlatform","_ref13","_callee13","platform","_context13","_x6","deletePlatform","_ref14","_callee14","_context14","_x7","getDataForActivityPage","_ref15","_callee15","_context15","_x8"],"mappings":"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","file":"static/js/95.722fe675.chunk.js","sourcesContent":["// Core\nimport React, { Component } from \"react\";\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col\n} from \"reactstrap\";\n// Instruments\nimport { sendEmail } from \"../../../utils/api\";\n\nclass Compose extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      email: \"\",\n      subject: \"\",\n      body: \"\",\n      dropdownOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  handleInputChange = ({ target: { name, value } }) =>\n    this.setState({ [name]: value });\n\n  handleSubmit = () => {\n    const { email, subject, body } = this.state;\n\n    const content = {\n      email,\n      subject,\n      body\n    };\n\n    sendEmail(content);\n  };\n\n  render() {\n    const { email, subject, body } = this.state;\n    console.log(this.props);\n    return (\n      <div className=\"animated fadeIn\">\n        <div className=\"email-app\">\n          <nav>\n            <Nav>\n              <NavItem>\n                <NavLink href=\"#/email/inbox\">\n                  <i className=\"fa fa-inbox\" /> Inbox\n                  {/* <Badge color=\"danger\">4</Badge> */}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"fa fa-rocket\" /> Sent\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </nav>\n          <main>\n            <p className=\"text-center\">New Message</p>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup row className=\"mb-3\">\n                {/* strange reactstrap sizing for Label: className=\"col-2 col-sm-1 col-form-label\" */}\n                <Label for=\"email\" xs={2} sm={1}>\n                  To:\n                </Label>\n                <Col xs={10} sm={11}>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Type email\"\n                    autoComplete=\"email\"\n                    onChange={this.handleInputChange}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row className=\"mb-3\">\n                <Label for=\"subject\" xs={2} sm={1}>\n                  Subject:\n                </Label>\n                <Col xs={10} sm={11}>\n                  <Input\n                    type=\"text\"\n                    id=\"subject\"\n                    name=\"subject\"\n                    value={subject}\n                    placeholder=\"Type subject\"\n                    autoComplete=\"email\"\n                    onChange={this.handleInputChange}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n            <Row>\n              <Col sm={11} className=\"ml-auto\">\n                <FormGroup className=\"mt-4\">\n                  <Input\n                    type=\"textarea\"\n                    id=\"message\"\n                    name=\"body\"\n                    value={body}\n                    rows=\"12\"\n                    placeholder=\"Click here to reply\"\n                    onChange={this.handleInputChange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Button\n                    type=\"submit\"\n                    color=\"success\"\n                    className={\"mr-1\"}\n                    onClick={this.handleSubmit}\n                  >\n                    Send\n                  </Button>\n                  {/* <Button type=\"submit\" color=\"light\" className={\"mr-1\"}>\n                    Draft\n                  </Button> */}\n                  <Button\n                    color=\"danger\"\n                    className={\"mr-1\"}\n                    onClick={() => this.props.history.push(\"/email/inbox\")}\n                  >\n                    Discard\n                  </Button>\n                </FormGroup>\n              </Col>\n            </Row>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Compose;\n","const URL = \"http://api.uppeople.co/api\";\nconst getToken = () => localStorage.getItem(\"token\");\n\n/**\n * Fetches options for selects from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getOptionsForSelects = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/returnOptionsForSelects`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`Error while fetching: ${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches letter templates from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getNotificationTemplates = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnEmailTemplate`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all emails from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getAllEmails = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/emailBox`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Sends email to a recipient\n *\n * @param {Object} content { recipient's email, subject, text}\n * @returns {Promise} Promise object represents operation result\n */\nexport const sendEmail = async content => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/interview/mailBoxSend`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(content)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches events for calendar from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getEventsForCalendar = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/calendarView`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for admin's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForAdminDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Filters data for admin's dashboard from an api\n *\n * @param {Object} filter { dateFrom, dateTo }\n * @returns {Promise} Promise object represents operation result\n */\nexport const filterDataForAdminDashboard = async filter => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardAdmin`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(filter)\n    });\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches data for recruiter's dashboard from an api\n *\n * @returns {Promise} Promise object represents operation result\n */\nexport const getDataForRecruiterDashboard = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/main/dashBoardRecruiter`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches links from an api\n *\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForLinksPage = async () => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLinks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds link to the list\n *\n * @param {Object} link link object\n * @returns {Object} Promise object represents operation result\n */\nexport const addLink = async link => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/addLink`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(link)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes link from the list\n *\n * @param {Number} id link's id\n * @returns {Object} Promise object represents operation result\n */\nexport const deleteLink = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/deleteLink/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n *  Filters and sorts recruiter's candidates\n *\n * @param {Number} page current page for pagination\n * @param {Object} filterAndSort filter object\n * @returns {Object} Promise object represents operation result\n */\nexport const filterAndSortRecruiterCandidates = (page, filterAndSort) => {\n  const token = getToken();\n\n  return fetch(`${URL}/main/listAllCandUsers/${page}`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(filterAndSort)\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(`Error while fetching: ${response.statusText}`);\n    })\n    .then(data => {\n      const candidatesData = {\n        candidates: data.candidates,\n        candidatesCount: data.Count,\n        totalPages: data.Page,\n        perPage: data.perPage,\n        currentPage: data.currentPage,\n        platforms: data.platforms,\n        companies: data.company,\n        statuses: data.statuses,\n        recruiter: data.recruiter\n      };\n\n      return candidatesData;\n    })\n    .catch(error => console.log(\"error in fetch: \", error));\n};\n\n/**\n * Fetches platforms from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForPlatformPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllPlatforms/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Adds platform to the list\n *\n * @param {Object} platform platform object\n * @returns {Object} Promise object represents operation result\n */\nexport const addPlatform = async platform => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/add-platform`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(platform)\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Deletes platform from the list\n *\n * @param {Number} id platform's id\n * @returns {Object} - Promise object represents operation result\n */\nexport const deletePlatform = async id => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/delete-platform/${id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n\n/**\n * Fetches all logs from an api\n *\n * @param {Number} page current page for pagination\n * @returns {Object} Promise object represents operation result\n */\nexport const getDataForActivityPage = async page => {\n  const token = getToken();\n  try {\n    const response = await fetch(`${URL}/admin/returnAllLogs/${page}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error(`${response.statusText}`);\n  } catch (error) {\n    return console.log(\"error in fetch: \", error);\n  }\n};\n"],"sourceRoot":""}